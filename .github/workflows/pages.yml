name: Pages

on:
  push:
    branches:
      - source  # default branch


jobs:
  build:
    runs-on: ubuntu-latest
    name: A job to deploy blog.
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        submodules: false # Checkout private submodules(themes or something else).
    #- name: Checkout tools repo
    #  uses: actions/checkout@v2
    #  with:
    #    repository: theme-next/hexo-theme-next
    #    path: themes/next
    - name: Install Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 16

    - uses: pnpm/action-setup@v2
      name: Install pnpm
      with:
        version: 8
        run_install: false

    - name: Get pnpm store directory
      shell: bash
      run: |
        echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

    - uses: actions/cache@v3
      name: Setup pnpm cache
      with:
        path: ${{ env.STORE_PATH }}
        key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
        restore-keys: |
          ${{ runner.os }}-pnpm-store-

    - name: Install dependencies
      run: pnpm install
    - name: Build
      run: pnpm run build
    - name: Deploy
      uses: peaceiris/actions-gh-pages@v3.7.3
      with:
        deploy_key: ${{ secrets.GENERATE }}
        #github_token: ${{ secrets.GENERATE }}
        publish_dir: ./public
        publish_branch: master
    # Deploy hexo blog website.
    #- name: Deploy
    #  id: deploy
     # uses: sma11black/hexo-action@v1.0.3
      #with:
       # deploy_key: ${{ secrets.GENERATE }}
        #user_name: piggsoft  # (or delete this input setting to use bot account)
        #user_email: piggsoft@163.com  # (or delete this input setting to use bot account)
        #commit_msg: ${{ github.event.head_commit.message }}  # (or delete this input setting to use hexo default settings)
        #publish_dir: ./public
        #publish_branch: master  # deploying branch
    # Use the output from the `deploy` step(use for test action)
    - name: Get the output
      run: |
        echo "${{ steps.deploy.outputs.notify }}"
